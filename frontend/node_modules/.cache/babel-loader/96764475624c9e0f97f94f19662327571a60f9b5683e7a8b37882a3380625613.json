{"ast":null,"code":"import _initializerDefineProperty from \"/var/www/html/FE/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"/var/www/html/FE/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"/var/www/html/FE/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\nvar _class, _descriptor, _descriptor2;\nimport { observable, action } from 'mobx';\nimport { types } from \"mobx-state-tree\";\nconst TodoModel = types.model({\n  label: types.optional(types.string, \"\"),\n  checked: types.optional(types.boolean, false)\n}).actions(_c = self => ({\n  setLabel(label) {\n    self.label = label;\n  },\n  setChecked(checked) {\n    self.checked = checked;\n  }\n}));\n_c2 = TodoModel;\nconst TodosModel = types.model({\n  todos: types.optional(types.array(TodoModel), [])\n}).volatile(() => ({\n  input: \"\",\n  indEdit: -1\n})).actions(_c3 = self => ({\n  addTodo(todo) {\n    self.todos.push(todo);\n  },\n  deleteTodo(ind) {\n    self.todos.splice(ind, 1);\n  },\n  setInput(input) {\n    self.input = input;\n  },\n  setIndexEdit(indEdit) {\n    self.indEdit = indEdit;\n  }\n}));\n_c4 = TodosModel;\nconst todoModel = TodosModel.create();\nlet AuthStore = (_class = class AuthStore {\n  constructor() {\n    _initializerDefineProperty(this, \"user\", _descriptor, this);\n    _initializerDefineProperty(this, \"isLogin\", _descriptor2, this);\n  }\n  setUser(user) {\n    this.user = user;\n  }\n  setIsLogin(isLogin) {\n    this.isLogin = isLogin;\n  }\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"user\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      id: 0,\n      name: '',\n      email: '',\n      role_name: '',\n      role_slug: ''\n    };\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"isLogin\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"setUser\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setUser\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setIsLogin\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setIsLogin\"), _class.prototype)), _class);\nconst authStore = new AuthStore();\nexport default authStore;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"TodoModel$types\\n  .model({\\n    label: types.optional(types.string, \\\"\\\"),\\n    checked: types.optional(types.boolean, false)\\n  })\\n  .actions\");\n$RefreshReg$(_c2, \"TodoModel\");\n$RefreshReg$(_c3, \"TodosModel$types\\n  .model({\\n    todos: types.optional(types.array(TodoModel), [])\\n  })\\n  .volatile(() => ({ input: \\\"\\\", indEdit: -1 }))\\n  .actions\");\n$RefreshReg$(_c4, \"TodosModel\");","map":{"version":3,"names":["observable","action","types","TodoModel","model","label","optional","string","checked","boolean","actions","_c","self","setLabel","setChecked","_c2","TodosModel","todos","array","volatile","input","indEdit","_c3","addTodo","todo","push","deleteTodo","ind","splice","setInput","setIndexEdit","_c4","todoModel","create","AuthStore","_class","constructor","_initializerDefineProperty","_descriptor","_descriptor2","setUser","user","setIsLogin","isLogin","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","id","name","email","role_name","role_slug","Object","getOwnPropertyDescriptor","authStore","$RefreshReg$"],"sources":["/var/www/html/FE/src/mobX/AuthStore.ts"],"sourcesContent":["import { observable, action } from 'mobx';\nimport { SnapshotOut, types } from \"mobx-state-tree\";\nimport { User } from '../type/UserType';\n\n\nconst TodoModel = types\n  .model({\n    label: types.optional(types.string, \"\"),\n    checked: types.optional(types.boolean, false)\n  })\n  .actions((self) => ({\n    setLabel(label: string) {\n      self.label = label;\n    },\n    setChecked(checked: boolean) {\n      self.checked = checked;\n    }\n  }));\n\ntype TTodoSnap = SnapshotOut<typeof TodoModel>;\n\nconst TodosModel = types\n  .model({\n    todos: types.optional(types.array(TodoModel), [])\n  })\n  .volatile(() => ({ input: \"\", indEdit: -1 }))\n  .actions((self) => ({\n    addTodo(todo: TTodoSnap) {\n      self.todos.push(todo);\n    },\n    deleteTodo(ind: number) {\n      self.todos.splice(ind, 1);\n    },\n    setInput(input: string) {\n      self.input = input;\n    },\n    setIndexEdit(indEdit: number) {\n      self.indEdit = indEdit;\n    }\n  }));\n\nconst todoModel = TodosModel.create();\n\n\nclass AuthStore {\n  @observable user: User = {\n    id: 0,\n    name: '',\n    email: '',\n    role_name: '',\n    role_slug: '',\n  };\n\n  @observable isLogin: boolean = false;\n\n  @action\n  setUser(user: User): void {\n    this.user = user;\n  }\n\n  @action\n  setIsLogin(isLogin: boolean): void {\n    this.isLogin = isLogin;\n  }\n}\n\nconst authStore = new AuthStore();\nexport default authStore;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}