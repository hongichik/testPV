{"ast":null,"code":"import { types } from 'mobx-state-tree';\nimport User from '../type/UserType';\nconst AuthStore = types.model({\n  user: types.optional(User, {\n    id: 0,\n    name: '',\n    email: '',\n    role_name: '',\n    role_slug: ''\n  }),\n  isLogin: types.optional(types.boolean, false)\n}).actions(_c = self => ({\n  setUser(user) {\n    self.user = user;\n  },\n  setIsLogin(isLogin) {\n    self.isLogin = isLogin;\n  }\n}));\n_c2 = AuthStore;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthStore$types\\n  .model({\\n    user: types.optional(User, {\\n      id: 0,\\n      name: '',\\n      email: '',\\n      role_name: '',\\n      role_slug: '',\\n    }),\\n    isLogin: types.optional(types.boolean, false)\\n  })\\n  .actions\");\n$RefreshReg$(_c2, \"AuthStore\");","map":{"version":3,"names":["types","User","AuthStore","model","user","optional","id","name","email","role_name","role_slug","isLogin","boolean","actions","_c","self","setUser","setIsLogin","_c2","$RefreshReg$"],"sources":["/var/www/html/FE/src/mobX/AuthStore.ts"],"sourcesContent":["import { types } from 'mobx-state-tree';\nimport User from '../type/UserType';\n\n\nconst AuthStore = types\n  .model({\n    user: types.optional(User, {\n      id: 0,\n      name: '',\n      email: '',\n      role_name: '',\n      role_slug: '',\n    }),\n    isLogin: types.optional(types.boolean, false)\n  })\n  .actions((self) => ({\n    setUser(user: typeof User.Type) {\n      self.user = user;\n    },\n    setIsLogin(isLogin: boolean) {\n      self.isLogin = isLogin;\n    }\n  }));"],"mappings":"AAAA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,OAAOC,IAAI,MAAM,kBAAkB;AAGnC,MAAMC,SAAS,GAAGF,KAAK,CACpBG,KAAK,CAAC;EACLC,IAAI,EAAEJ,KAAK,CAACK,QAAQ,CAACJ,IAAI,EAAE;IACzBK,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE;EACb,CAAC,CAAC;EACFC,OAAO,EAAEX,KAAK,CAACK,QAAQ,CAACL,KAAK,CAACY,OAAO,EAAE,KAAK;AAC9C,CAAC,CAAC,CACDC,OAAO,CAAAC,EAAA,GAAEC,IAAI,KAAM;EAClBC,OAAOA,CAACZ,IAAsB,EAAE;IAC9BW,IAAI,CAACX,IAAI,GAAGA,IAAI;EAClB,CAAC;EACDa,UAAUA,CAACN,OAAgB,EAAE;IAC3BI,IAAI,CAACJ,OAAO,GAAGA,OAAO;EACxB;AACF,CAAC,CAAC,CAAC;AAACO,GAAA,GAlBAhB,SAAS;AAAA,IAAAY,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}