{"ast":null,"code":"import { types } from 'mobx-state-tree';\nimport User from '../type/UserType';\nconst TodoModel = types.model({\n  user: types.optional(User, {\n    id: 0,\n    name: '',\n    email: '',\n    role_name: '',\n    role_slug: ''\n  }),\n  isLogin: types.optional(types.boolean, false)\n}).actions(_c = self => ({\n  setUser(user) {\n    self.user = user;\n  },\n  setIsLogin(isLogin) {\n    self.isLogin = isLogin;\n  }\n}));\n\n// export default TodoModel;\n_c2 = TodoModel;\nconst TodosModel = types.model({\n  todos: types.optional(types.array(TodoModel), [])\n}).volatile(() => ({\n  input: \"\",\n  indEdit: -1\n})).actions(_c3 = self => ({\n  addTodo(todo) {\n    self.todos.push(todo);\n  },\n  deleteTodo(ind) {\n    self.todos.splice(ind, 1);\n  },\n  setInput(input) {\n    self.input = input;\n  },\n  setIndexEdit(indEdit) {\n    self.indEdit = indEdit;\n  }\n}));\n_c4 = TodosModel;\nconst todoModel = TodosModel.create();\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"TodoModel$types\\n  .model({\\n    user: types.optional(User, {\\n      id: 0,\\n      name: '',\\n      email: '',\\n      role_name: '',\\n      role_slug: '',\\n    }),\\n    isLogin: types.optional(types.boolean, false)\\n  })\\n  .actions\");\n$RefreshReg$(_c2, \"TodoModel\");\n$RefreshReg$(_c3, \"TodosModel$types\\n  .model({\\n    todos: types.optional(types.array(TodoModel), [])\\n  })\\n  .volatile(() => ({ input: \\\"\\\", indEdit: -1 }))\\n  .actions\");\n$RefreshReg$(_c4, \"TodosModel\");","map":{"version":3,"names":["types","User","TodoModel","model","user","optional","id","name","email","role_name","role_slug","isLogin","boolean","actions","_c","self","setUser","setIsLogin","_c2","TodosModel","todos","array","volatile","input","indEdit","_c3","addTodo","todo","push","deleteTodo","ind","splice","setInput","setIndexEdit","_c4","todoModel","create","$RefreshReg$"],"sources":["/var/www/html/FE/src/mobX/AuthStore.ts"],"sourcesContent":["import { types, SnapshotOut } from 'mobx-state-tree';\nimport User  from '../type/UserType';\n\n\n\nconst TodoModel = types\n  .model({\n    user: types.optional(User, {\n      id: 0,\n      name: '',\n      email: '',\n      role_name: '',\n      role_slug: '',\n    }),\n    isLogin: types.optional(types.boolean, false)\n  })\n  .actions((self) => ({\n    setUser(user: typeof User.Type) {\n      self.user = user;\n    },\n    setIsLogin(isLogin: boolean) {\n      self.isLogin = isLogin;\n    }\n  }));\n\n// export default TodoModel;\n\n\ntype TTodoSnap = SnapshotOut<typeof TodoModel>;\n\nconst TodosModel = types\n  .model({\n    todos: types.optional(types.array(TodoModel), [])\n  })\n  .volatile(() => ({ input: \"\", indEdit: -1 }))\n  .actions((self) => ({\n    addTodo(todo: TTodoSnap) {\n      self.todos.push(todo);\n    },\n    deleteTodo(ind: number) {\n      self.todos.splice(ind, 1);\n    },\n    setInput(input: string) {\n      self.input = input;\n    },\n    setIndexEdit(indEdit: number) {\n      self.indEdit = indEdit;\n    }\n  }));\n\nconst todoModel = TodosModel.create();\n\n\n"],"mappings":"AAAA,SAASA,KAAK,QAAqB,iBAAiB;AACpD,OAAOC,IAAI,MAAO,kBAAkB;AAIpC,MAAMC,SAAS,GAAGF,KAAK,CACpBG,KAAK,CAAC;EACLC,IAAI,EAAEJ,KAAK,CAACK,QAAQ,CAACJ,IAAI,EAAE;IACzBK,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE;EACb,CAAC,CAAC;EACFC,OAAO,EAAEX,KAAK,CAACK,QAAQ,CAACL,KAAK,CAACY,OAAO,EAAE,KAAK;AAC9C,CAAC,CAAC,CACDC,OAAO,CAAAC,EAAA,GAAEC,IAAI,KAAM;EAClBC,OAAOA,CAACZ,IAAsB,EAAE;IAC9BW,IAAI,CAACX,IAAI,GAAGA,IAAI;EAClB,CAAC;EACDa,UAAUA,CAACN,OAAgB,EAAE;IAC3BI,IAAI,CAACJ,OAAO,GAAGA,OAAO;EACxB;AACF,CAAC,CAAC,CAAC;;AAEL;AAAAO,GAAA,GApBMhB,SAAS;AAyBf,MAAMiB,UAAU,GAAGnB,KAAK,CACrBG,KAAK,CAAC;EACLiB,KAAK,EAAEpB,KAAK,CAACK,QAAQ,CAACL,KAAK,CAACqB,KAAK,CAACnB,SAAS,CAAC,EAAE,EAAE;AAClD,CAAC,CAAC,CACDoB,QAAQ,CAAC,OAAO;EAAEC,KAAK,EAAE,EAAE;EAAEC,OAAO,EAAE,CAAC;AAAE,CAAC,CAAC,CAAC,CAC5CX,OAAO,CAAAY,GAAA,GAAEV,IAAI,KAAM;EAClBW,OAAOA,CAACC,IAAe,EAAE;IACvBZ,IAAI,CAACK,KAAK,CAACQ,IAAI,CAACD,IAAI,CAAC;EACvB,CAAC;EACDE,UAAUA,CAACC,GAAW,EAAE;IACtBf,IAAI,CAACK,KAAK,CAACW,MAAM,CAACD,GAAG,EAAE,CAAC,CAAC;EAC3B,CAAC;EACDE,QAAQA,CAACT,KAAa,EAAE;IACtBR,IAAI,CAACQ,KAAK,GAAGA,KAAK;EACpB,CAAC;EACDU,YAAYA,CAACT,OAAe,EAAE;IAC5BT,IAAI,CAACS,OAAO,GAAGA,OAAO;EACxB;AACF,CAAC,CAAC,CAAC;AAACU,GAAA,GAlBAf,UAAU;AAoBhB,MAAMgB,SAAS,GAAGhB,UAAU,CAACiB,MAAM,CAAC,CAAC;AAAC,IAAAtB,EAAA,EAAAI,GAAA,EAAAO,GAAA,EAAAS,GAAA;AAAAG,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAnB,GAAA;AAAAmB,YAAA,CAAAZ,GAAA;AAAAY,YAAA,CAAAH,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}