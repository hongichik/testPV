{"ast":null,"code":"import Axios from 'axios';\nimport Cookie from './cookie';\nclass AxiosClass {\n  constructor() {\n    this.$axios = void 0;\n    this.$axios = Axios.create({\n      baseURL: process.env.API_HOST,\n      timeout: 300000,\n      headers: {\n        Accept: 'multipart/form-data',\n        'Content-Type': 'multipart/form-data'\n      }\n      // withCredentials: true\n    });\n\n    this.$axios.interceptors.request.use(function (config) {\n      const accessToken = Cookie.GetCookie('accessToken');\n      if (accessToken != null) {\n        config.headers.Authorization = `Bearer accessToken}`;\n      }\n      return config;\n    });\n  }\n  async get(url, query) {\n    try {\n      const response = await this.$axios.get(url, {\n        params: query\n      });\n      return response.data;\n    } catch (error) {\n      return false;\n    }\n  }\n  async post(url, data) {\n    try {\n      const response = await this.$axios.post(url, data);\n      return response.data;\n    } catch (error) {\n      return false;\n    }\n  }\n  async patch(url, data) {\n    try {\n      const response = await this.$axios.patch(url, data);\n      return response.data.data;\n    } catch (error) {\n      return false;\n    }\n  }\n  async put(url, data) {\n    try {\n      const response = await this.$axios.put(url, data);\n      return response.data.data;\n    } catch (error) {\n      return false;\n    }\n  }\n  async delete(url) {\n    try {\n      const response = await this.$axios.delete(url);\n      return response.data.data;\n    } catch (error) {\n      return false;\n    }\n  }\n}\nconst adminAxios = new AxiosClass();\nexport default adminAxios;","map":{"version":3,"names":["Axios","Cookie","AxiosClass","constructor","$axios","create","baseURL","process","env","API_HOST","timeout","headers","Accept","interceptors","request","use","config","accessToken","GetCookie","Authorization","get","url","query","response","params","data","error","post","patch","put","delete","adminAxios"],"sources":["/var/www/html/FE/src/utils/axios.ts"],"sourcesContent":["import Axios from 'axios';\nimport Cookie from './cookie';\n\nclass AxiosClass {\n\n    $axios;\n\n    constructor() {\n        this.$axios = Axios.create({\n            baseURL: process.env.API_HOST,\n            timeout: 300000,\n            headers: {\n                Accept: 'multipart/form-data',\n                'Content-Type': 'multipart/form-data',\n                \n            },\n            // withCredentials: true\n        });\n\n        this.$axios.interceptors.request.use(function (config) {\n            const accessToken = Cookie.GetCookie('accessToken');\n            if (accessToken != null) {\n                config.headers.Authorization = `Bearer accessToken}`;\n            }\n            return config;\n        });\n    }\n\n    async get(url:string, query?:any) {\n        try {\n            const response = await this.$axios.get(url, { params: query });\n            return response.data;\n        } catch (error) {\n            return false;\n        }\n    }\n\n    async post(url:string, data?:FormData) {\n        try {\n            const response = await this.$axios.post(url, data);\n\n            return response.data;\n        } catch (error) {\n            return false;\n        }\n    }\n\n    async patch(url:string, data?:any) {\n        try {\n            const response = await this.$axios.patch(url, data);\n            return response.data.data;\n        } catch (error) {\n            return false;\n        }\n    }\n\n    async put(url:string, data:any) {\n        try {\n            const response = await this.$axios.put(url, data);\n            return response.data.data;\n        } catch (error) {\n            return false;\n        }\n    }\n\n    async delete(url:string) {\n        try {\n            const response = await this.$axios.delete(url);\n            return response.data.data;\n        } catch (error) {\n            return false;\n        }\n    }\n}\n\nconst adminAxios = new AxiosClass();\nexport default adminAxios;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAE7B,MAAMC,UAAU,CAAC;EAIbC,WAAWA,CAAA,EAAG;IAAA,KAFdC,MAAM;IAGF,IAAI,CAACA,MAAM,GAAGJ,KAAK,CAACK,MAAM,CAAC;MACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;MAC7BC,OAAO,EAAE,MAAM;MACfC,OAAO,EAAE;QACLC,MAAM,EAAE,qBAAqB;QAC7B,cAAc,EAAE;MAEpB;MACA;IACJ,CAAC,CAAC;;IAEF,IAAI,CAACR,MAAM,CAACS,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAAUC,MAAM,EAAE;MACnD,MAAMC,WAAW,GAAGhB,MAAM,CAACiB,SAAS,CAAC,aAAa,CAAC;MACnD,IAAID,WAAW,IAAI,IAAI,EAAE;QACrBD,MAAM,CAACL,OAAO,CAACQ,aAAa,GAAI,qBAAoB;MACxD;MACA,OAAOH,MAAM;IACjB,CAAC,CAAC;EACN;EAEA,MAAMI,GAAGA,CAACC,GAAU,EAAEC,KAAU,EAAE;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACnB,MAAM,CAACgB,GAAG,CAACC,GAAG,EAAE;QAAEG,MAAM,EAAEF;MAAM,CAAC,CAAC;MAC9D,OAAOC,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,OAAO,KAAK;IAChB;EACJ;EAEA,MAAMC,IAAIA,CAACN,GAAU,EAAEI,IAAc,EAAE;IACnC,IAAI;MACA,MAAMF,QAAQ,GAAG,MAAM,IAAI,CAACnB,MAAM,CAACuB,IAAI,CAACN,GAAG,EAAEI,IAAI,CAAC;MAElD,OAAOF,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,OAAO,KAAK;IAChB;EACJ;EAEA,MAAME,KAAKA,CAACP,GAAU,EAAEI,IAAS,EAAE;IAC/B,IAAI;MACA,MAAMF,QAAQ,GAAG,MAAM,IAAI,CAACnB,MAAM,CAACwB,KAAK,CAACP,GAAG,EAAEI,IAAI,CAAC;MACnD,OAAOF,QAAQ,CAACE,IAAI,CAACA,IAAI;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,OAAO,KAAK;IAChB;EACJ;EAEA,MAAMG,GAAGA,CAACR,GAAU,EAAEI,IAAQ,EAAE;IAC5B,IAAI;MACA,MAAMF,QAAQ,GAAG,MAAM,IAAI,CAACnB,MAAM,CAACyB,GAAG,CAACR,GAAG,EAAEI,IAAI,CAAC;MACjD,OAAOF,QAAQ,CAACE,IAAI,CAACA,IAAI;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,OAAO,KAAK;IAChB;EACJ;EAEA,MAAMI,MAAMA,CAACT,GAAU,EAAE;IACrB,IAAI;MACA,MAAME,QAAQ,GAAG,MAAM,IAAI,CAACnB,MAAM,CAAC0B,MAAM,CAACT,GAAG,CAAC;MAC9C,OAAOE,QAAQ,CAACE,IAAI,CAACA,IAAI;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,OAAO,KAAK;IAChB;EACJ;AACJ;AAEA,MAAMK,UAAU,GAAG,IAAI7B,UAAU,CAAC,CAAC;AACnC,eAAe6B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}